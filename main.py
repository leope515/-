#x = 4
#ca = '123456'
#if str(x) in ca:
#    print(ca.replace(ca[x],str(x-2)))
'''
str.split(sep=None)：返回一个列表，由str根据sep被分割的部分构成，省略sep默认以空格分割。
str.strip(chars)：从字符串str中去掉在其左侧和右侧chars中列出的字符。
str.replace(old,new)：返回字符串str的副本，所有old子串被替换为new。
str.center(width,fillchar)：字符串居中函数，fillchar参数可选。
s.index(x)：序列s中第一次出现元素x的位置。
索引序号从0开始，所以第一次出现'乌龙茶'的位置是1。
round(x,d)：对 x 四舍五入，保留 d 位小数，无参数 d 则返回四舍五入的整数值。




ls.clear()：删除 ls 中所有元素。
对于列表类型，使用等号无法实现真正的赋值，不能产生新列表。ls = lt 语句并不是拷贝lt中的元素给变量 
ls，而是新关联了一个引用，即增加一个别名，ls 和 lt 所指向的是同一套内容，所以删除 ls 中的元素，lt也随之变成空列表。

满二叉树与完全二叉树之间的区别,已解释过.
依次从上到下,可得出：
第1层结点数为1；
第2层结点数为2*1=2；
第3层结点数为2*2=4；
第n层结点数为2的n-1次幂,




r：只读模式，如果文件不存在，返回异常。
x：创建写模式，文件不存在则创建，存在则返回异常。
a：追加写模式，文件不存在则创建，存在则在原文件最后追加内容。
+：与r/w/x/a一同使用，在原功能基础上增加同时读写功能。


'''
ls = [1,2,3]
lt = [4,5,6]
print(ls+lt)